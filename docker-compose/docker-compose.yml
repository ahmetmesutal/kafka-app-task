version: '3.8'

services:
  # MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo-service
    ports:
      - "27017:27017"
    networks:
      - event-driven-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - event-driven-network
  # kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - event-driven-network

  # Producer app
  producer:
    build:
      context: ./producer-app
      dockerfile: Dockerfile
    container_name: producer
    env_file:
      - ./producer-app/.env
    depends_on:
      - kafka
    networks:
      - event-driven-network
    ports:
      - "8081:8081"

  # Consumer app
  consumer:
    build:
      context: ./consumer-app
      dockerfile: Dockerfile
    container_name: consumer
    env_file:
      - ./consumer-app/.env
    depends_on:
      - kafka
      - mongo
    networks:
      - event-driven-network
    ports:
      - "8082:8082"

  # API app
  api:
    build:
      context: ./api-app
      dockerfile: Dockerfile
    container_name: api-app
    env_file:
      - ./api-app/.env
    depends_on:
      - mongo
    networks:
      - event-driven-network
    ports:
      - "3000:3000"

networks:
  event-driven-network:
    driver: bridge
